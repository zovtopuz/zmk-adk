/*
* Copyright (c) 2020 The ZMK Contributors
*
* SPDX-License-Identifier: MIT
*/

#include <dt-bindings/zmk/matrix_transform.h>
// #include "ak3-layouts.dtsi"

#define KEYS_L 0 1 2 3 4 5 18 19 20 21 22 23 36 37 38 39 40 41 53 54 55 56 57 58// left-hand keys
#define KEYS_R 6 7 8 9 10 11 12 13 24 25 26 27 28 29 30 31 42 43 44 45 46 47 48 59 60 61 62 63 64// right-hand keys
#define THUMBS 68 69 70 71 72 73 74 75 76// thumb keys
#define NP 14 15 16 17 32 33 34 35 49 50 51 52 65 66 67 77 78 79// number pad keys

#define HM_TAPPING_TERM 280
#define HM_TAPPING_TERM_FAST 200
#define HM_TAPPING_TERM_QT 175

sr: &pro_micro_spi {
	compatible = "nordic,nrf-spim";
	pinctrl-0 = <&pro_micro_spi_default>;
	pinctrl-1 = <&pro_micro_spi_sleep>;
	pinctrl-names = "default", "sleep";
	status = "okay";
	cs-gpios = <&pro_micro 6 GPIO_ACTIVE_LOW>;
	
	shifter: 595@0 {
		compatible = "zmk,gpio-595";
		status = "okay";
		gpio-controller;
		spi-max-frequency = <200000>;
		reg = <0>;
		#gpio-cells = <2>;
		ngpios = <8>;
	};
};

/ {
	chosen {
		zmk,kscan = &kscan0;
		zmk,physical-layout = &default_layout;
	};
	
	default_transform: keymap_transform_0 {
		compatible = "zmk,matrix-transform";
		columns = <18>;
		rows = <5>;
		// M0487 Apple Standard Keyboard II
		map = <
		RC(4,2) RC(2,6) RC(3,6) RC(4,6) RC(6,6) RC(5,6) RC(0,6) RC(0,0) RC(7,0) RC(7,6) RC(7,1) RC(0,1) RC(5,1) RC(6,1) RC(4,9) RC(3,9) RC(2,9) RC(1,9)
		RC(1,7) RC(2,7) RC(3,7) RC(4,7) RC(6,7) RC(5,7) RC(0,7) RC(7,7) RC(7,8) RC(0,8) RC(5,8) RC(6,8) RC(4,8) RC(3,2) RC(4,5) RC(3,5) RC(2,5) RC(1,5)
		RC(8,0) RC(1,3) RC(2,3) RC(3,3) RC(4,3) RC(6,3) RC(5,3) RC(0,3) RC(7,3) RC(4,1) RC(2,8) RC(1,8) RC(3,8) RC(7,5) RC(0,5) RC(5,5) RC(6,5)
		RC(8,4) RC(1,4) RC(1,4) RC(2,4) RC(3,4) RC(4,4) RC(6,4) RC(5,4) RC(0,4) RC(7,4) RC(3,1) RC(2,1) RC(8,4) RC(7,9) RC(0,9) RC(5,9)
		RC(8,1) RC(8,2) RC(8,3) RC(1,2) RC(1,6) RC(2,2) RC(7,2) RC(5,2) RC(1,1) RC(0,2) RC(6,2) RC(6,9)
		>;
	};
	// Combine matrix and direct GPIO for modifiers like the original
	kscan0: kscan_composite {
		compatible = "zmk,kscan-composite";
		rows = <9>;
		columns = <10>;
		
		// Include the matrix driver
		matrix {
			kscan = <&kscan1>;
		};
		
		// // Include the direct GPIO driver...
		// direct {
		// 	kscan = <&kscan2>;
		// 	row-offset = <8>;
		// };
	};
	
	kscan1: kscan_matrix {
		compatible = "zmk,kscan-gpio-matrix";
		diode-direction = "col2row";
		// Pins 7,13,14,16,19,20,21,22,23,24 are GPIO Columns
		col-gpios
		= <&shifter 6 GPIO_ACTIVE_LOW>
		, <&shifter 5 GPIO_ACTIVE_LOW>
		, <&shifter 4 GPIO_ACTIVE_LOW>
		, <&pro_micro 9 GPIO_ACTIVE_LOW>
		, <&shifter 0 GPIO_ACTIVE_LOW>
		, <&shifter 3 GPIO_ACTIVE_LOW>
		, <&shifter 1 GPIO_ACTIVE_LOW>
		, <&pro_micro 19 GPIO_ACTIVE_LOW>
		, <&shifter 7 GPIO_ACTIVE_LOW>
		, <&shifter 2 GPIO_ACTIVE_LOW>
		;
		// Pins 1,2,3,4,5,15,17,18 are GPIO Rows active-low, pull high
		row-gpios
		= <&pro_micro 7 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
		, <&pro_micro 10 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
		, <&pro_micro 16 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
		, <&pro_micro 14 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
		, <&pro_micro 15 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
		, <&pro_micro 18 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
		, <&pro_micro 8 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
		, <&pro_micro 3 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
		;
	};
	
};
